{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Imran Khan\\\\Desktop\\\\Blockchain\\\\Playing-with-Blockchain\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { ethers } from 'ethers';\nimport './App.css';\n\n// ABI\nimport GreetingABI from \"./artififacts/contracts/Greeting.sol/Greeting.json\";\n\n// Deployed Greeting Address\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst greetingAddress = '0x5FbDB2315678afecb367f032d93F642f64180aa3';\nfunction App() {\n  _s();\n  const [title, setTitle] = useState(\"\");\n  const [count, setCount] = useState(\"\");\n\n  // array to store struct 'Data'\n  const [data, setData] = useState([]);\n\n  // array to store mapping struct 'store'\n  const [store, setStore] = useState([]);\n  const [counter, setCounter] = useState(0);\n\n  // Helper Functions\n  const requestAccount = async () => {\n    await window.ethereum.request({\n      method: 'eth_requestAccounts'\n    });\n  };\n\n  // Getting name and age from Greeting\n  const fetchData = async () => {\n    if (window.ethereum) {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const contract = new ethers.Contract(greetingAddress, GreetingABI.abi, provider);\n      try {\n        // getting struct data and storing in an array state\n        // const struct = await contract.getData();\n        // setData(struct);\n        // console.log(data[0].toNumber());\n\n        // getting the counter value\n        const counter = await contract.getCounter();\n        setCounter(counter);\n        console.log(counter.toNumber());\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  // Setting ..........\n  // const pushData = async () => {\n  //   if (window.ethereum) {\n  //     try {\n  //       await window.ethereum.enable();\n  //       const provider = new ethers.providers.Web3Provider(window.ethereum);\n  //       const signer = provider.getSigner();\n\n  //       const contract = new ethers.Contract(greetingAddress, GreetingABI.abi, signer);\n  //       const transaction = await contract.setData('DApp', 2, true);\n\n  //       await transaction.wait();\n  //       fetchData();\n  //     } catch (error) {\n  //       console.error(error);\n  //     }\n  //   }\n  // };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"allButtons\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"154f36lloWuZ9pKseu2+mbG8alk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","ethers","GreetingABI","jsxDEV","_jsxDEV","greetingAddress","App","_s","title","setTitle","count","setCount","data","setData","store","setStore","counter","setCounter","requestAccount","window","ethereum","request","method","fetchData","provider","providers","Web3Provider","contract","Contract","abi","getCounter","console","log","toNumber","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Imran Khan/Desktop/Blockchain/Playing-with-Blockchain/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { ethers } from 'ethers';\nimport './App.css';\n\n// ABI\nimport GreetingABI from \"./artififacts/contracts/Greeting.sol/Greeting.json\";\n\n// Deployed Greeting Address\nconst greetingAddress = '0x5FbDB2315678afecb367f032d93F642f64180aa3';\n\nfunction App() {\n\n  const [title, setTitle] = useState(\"\");\n  const [count, setCount] = useState(\"\");\n\n  // array to store struct 'Data'\n  const [data, setData] = useState([]);\n\n  // array to store mapping struct 'store'\n  const [store, setStore] = useState([]);\n\n  const [counter, setCounter] = useState(0);\n\n  // Helper Functions\n  const requestAccount = async () => {\n    await window.ethereum.request({ method: 'eth_requestAccounts' });\n  }\n\n  // Getting name and age from Greeting\n  const fetchData = async () => {\n    if (window.ethereum) {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const contract = new ethers.Contract(greetingAddress, GreetingABI.abi, provider);\n      try {\n\n        // getting struct data and storing in an array state\n        // const struct = await contract.getData();\n        // setData(struct);\n        // console.log(data[0].toNumber());\n\n        // getting the counter value\n        const counter = await contract.getCounter();\n        setCounter(counter);\n\n        console.log(counter.toNumber());\n\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n\n\n  // Setting ..........\n  // const pushData = async () => {\n  //   if (window.ethereum) {\n  //     try {\n  //       await window.ethereum.enable();\n  //       const provider = new ethers.providers.Web3Provider(window.ethereum);\n  //       const signer = provider.getSigner();\n  \n  //       const contract = new ethers.Contract(greetingAddress, GreetingABI.abi, signer);\n  //       const transaction = await contract.setData('DApp', 2, true);\n  \n  //       await transaction.wait();\n  //       fetchData();\n  //     } catch (error) {\n  //       console.error(error);\n  //     }\n  //   }\n  // };\n  \n\n  useEffect(() => {\n    fetchData()\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n\n    {/* <p> Structure 'Data' Values<br />\n      ( <span className='columns'>ID, Title, Count, Flag</span> )<br />\n      ( <span className='values'>\n          {data[0]?data[0].toNumber():''} &nbsp;\n          {data[0]?data[1]:''} &nbsp;\n          {data[0]?data[2].toNumber():''} &nbsp;\n          {data[0]?data[3]?'True':'False':''}\n      </span> )\n    </p> */}\n\n    {/* <p>Counter: {counter!=0?counter:'0'}</p> */}\n        \n        <div className='allButtons'>\n          {/* <button className='button' onClick={fetchData}>Fetch Struct Data</button> */}\n        </div>\n        \n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,MAAM,QAAQ,QAAQ;AAC/B,OAAO,WAAW;;AAElB;AACA,OAAOC,WAAW,MAAM,oDAAoD;;AAE5E;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,eAAe,GAAG,4CAA4C;AAEpE,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACA,MAAM,CAACY,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;;EAEpC;EACA,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC;;EAEzC;EACA,MAAMkB,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,MAAMC,MAAM,CAACC,QAAQ,CAACC,OAAO,CAAC;MAAEC,MAAM,EAAE;IAAsB,CAAC,CAAC;EAClE,CAAC;;EAED;EACA,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAIJ,MAAM,CAACC,QAAQ,EAAE;MACnB,MAAMI,QAAQ,GAAG,IAAIvB,MAAM,CAACwB,SAAS,CAACC,YAAY,CAACP,MAAM,CAACC,QAAQ,CAAC;MACnE,MAAMO,QAAQ,GAAG,IAAI1B,MAAM,CAAC2B,QAAQ,CAACvB,eAAe,EAAEH,WAAW,CAAC2B,GAAG,EAAEL,QAAQ,CAAC;MAChF,IAAI;QAEF;QACA;QACA;QACA;;QAEA;QACA,MAAMR,OAAO,GAAG,MAAMW,QAAQ,CAACG,UAAU,CAAC,CAAC;QAC3Cb,UAAU,CAACD,OAAO,CAAC;QAEnBe,OAAO,CAACC,GAAG,CAAChB,OAAO,CAACiB,QAAQ,CAAC,CAAC,CAAC;MAEjC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;MACpB;IACF;EACF,CAAC;;EAGD;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGAnC,SAAS,CAAC,MAAM;IACdwB,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEnB,OAAA;IAAK+B,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBhC,OAAA;MAAQ+B,SAAS,EAAC,YAAY;MAAAC,QAAA,eAc5BhC,OAAA;QAAK+B,SAAS,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEtB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACjC,EAAA,CA1FQD,GAAG;AAAAmC,EAAA,GAAHnC,GAAG;AA4FZ,eAAeA,GAAG;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}