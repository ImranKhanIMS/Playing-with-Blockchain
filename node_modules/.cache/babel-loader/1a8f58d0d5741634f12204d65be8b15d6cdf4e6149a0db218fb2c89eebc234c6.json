{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Imran Khan\\\\Desktop\\\\Blockchain\\\\Playing-with-Blockchain\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { ethers } from 'ethers';\nimport './App.css';\n\n// ABI\nimport GreetingABI from \"./artififacts/contracts/Greeting.sol/Greeting.json\";\n\n// Deployed Greeting Address\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst greetingAddress = '0x5FbDB2315678afecb367f032d93F642f64180aa3';\nfunction App() {\n  _s();\n  const [title, setTitle] = useState(\"\");\n  const [count, setCount] = useState(\"\");\n\n  // array to store struct 'Data'\n  const [data, setData] = useState([]);\n  const [dataCustom, setDataCustom] = useState([]);\n\n  // array to store list of struct 'structData'\n  const [dataStruct, setDataStruct] = useState([]);\n\n  // Testting Array State\n  let [arr, setArr] = useState([]);\n  let [mapArr, setMapArr] = useState([]);\n\n  // array to store mapping struct 'store'\n  const [store, setStore] = useState([]);\n  const [counter, setCounter] = useState(\"\");\n  const [counterMap, setCounterMap] = useState(\"\");\n  let array = [];\n  let mapArray = [];\n\n  // Helper Functions\n  const requestAccount = async () => {\n    await window.ethereum.request({\n      method: 'eth_requestAccounts'\n    });\n  };\n\n  // Getting name and age from Greeting\n  const fetchData = async () => {\n    if (window.ethereum) {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const contract = new ethers.Contract(greetingAddress, GreetingABI.abi, provider);\n      try {\n        // getting struct data and storing in an array state\n        const struct = await contract.getData();\n        const structUpdate = await contract.getDataCustom();\n\n        // getting struct data custom values 'structDataCustom'\n        setData(struct);\n        setDataCustom(structUpdate);\n        // console.log(data[0].toNumber());\n\n        // getting list of struct data and storing in an array state\n        // const structData = await contract.getStructArray(0);\n        // setDataStruct(structData);\n\n        // getting mapping struct data and storing in an array state 'store'\n        const store = await contract.getMapping(0);\n        setStore(store);\n        // console.log((store[0]).toNumber());\n\n        // getting the counter value\n        const counter = await contract.getCounter();\n        setCounter(counter.toNumber());\n        // console.log(counter.toNumber());\n\n        // getting the counter for Mapping value\n        const counterMap = await contract.getCounterMap();\n        setCounterMap(counterMap.toNumber());\n        let test;\n        for (let i = 0; i < counter.toNumber() + 1; i++) {\n          if (i != 0) {\n            test = await contract.getStructArray(i);\n            array[i] = test;\n          } else {\n            test = await contract.getStructArray(0);\n            array[i] = test;\n          }\n        }\n\n        // console.log(counterMap.toNumber());\n        for (let i = 0; i < counterMap.toNumber() + 1; i++) {\n          if (i != 0) {\n            test = await contract.getMapping(i);\n            mapArray[i] = test;\n          } else {\n            test = await contract.getMapping(0);\n            mapArray[i] = test;\n          }\n        }\n\n        // assigning 2d array to array state 'arr'\n        setArr(array);\n\n        // assigning mapping to array state 'mapArr'\n        setMapArr(mapArray);\n\n        //   row.map((data, j) => {\n        //     // console.log(data);\n        //   })     \n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  // Updating Custom Data of Struct 'Data'\n  const updateData = async () => {\n    if (window.ethereum) {\n      try {\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(greetingAddress, GreetingABI.abi, signer);\n        const transaction = await contract.setData(title, count, true);\n        await transaction.wait();\n        fetchData();\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  };\n\n  // Adding new value to list of structure 'setStructArray'\n  const pushDataArray = async () => {\n    if (window.ethereum) {\n      try {\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(greetingAddress, GreetingABI.abi, signer);\n        const transaction = await contract.setStructArray(title, count, true);\n        await transaction.wait();\n        fetchData();\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  };\n\n  // Adding new value to mapping of structure 'setMapping'\n  const pushDataMapping = async () => {\n    if (window.ethereum) {\n      try {\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(greetingAddress, GreetingABI.abi, signer);\n        const transaction = await contract.setMapping(title, count, false);\n        await transaction.wait();\n        fetchData();\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" Structure 'Data' Values\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 32\n        }, this), \"( \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"columns\",\n          children: \"ID, Title, Count, Flag\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 9\n        }, this), \" )\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 66\n        }, this), \"( \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"values\",\n          children: [dataCustom[0] ? dataCustom[0].toNumber() : '', \" \\xA0\", dataCustom[0] ? dataCustom[1] : '', \" \\xA0\", dataCustom[0] ? dataCustom[2].toNumber() : '', \" \\xA0\", dataCustom[0] ? dataCustom[3] ? 'True' : 'False' : '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 9\n        }, this), \" )\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" List of sturcture 'getStructArray' Values\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 46\n        }, this), \"( \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"columns\",\n          children: \"ID, Title, Count, Flag\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 5\n        }, this), \" )\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 62\n        }, this), arr.map((rec, i) => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"(\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 9\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"values\",\n              children: [rec[0].toNumber(), \" \\xA0\", rec[1], \" \\xA0\", rec[2].toNumber(), \" \\xA0\", rec[3] == true ? 'True' : 'False']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 24\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \")\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 17\n            }, this), \"  \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" List of mapping 'getMapping' Values\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 40\n        }, this), \"( \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"columns\",\n          children: \"ID, Title, Count, Flag\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 5\n        }, this), \" )\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 62\n        }, this), mapArr.map((rec, i) => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"(\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 9\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"values\",\n              children: [rec[0].toNumber(), \" \\xA0\", rec[1], \" \\xA0\", rec[2].toNumber(), \" \\xA0\", rec[3] == true ? 'True' : 'False']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 24\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \")\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 17\n            }, this), \"  \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Array Counter: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"values\",\n          children: counter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 23\n        }, this), \" | Mapping Counter: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"values\",\n          children: counterMap\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 84\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"struct\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => setTitle(e.target.value),\n          value: title,\n          type: \"text\",\n          name: \"title\",\n          id: \"title\",\n          placeholder: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 7\n        }, this), \" \\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => setCount(e.target.value),\n          value: count,\n          type: \"text\",\n          name: \"count\",\n          id: \"count\",\n          placeholder: \"Count\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 7\n        }, this), \" \\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: updateData,\n          children: \"Update Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: pushDataArray,\n          children: \"Add to List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: pushDataMapping,\n          children: \"Add to Mapping\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"DpLvg8i9qfDxy+r5J2R13vzYDfY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","ethers","GreetingABI","jsxDEV","_jsxDEV","Fragment","_Fragment","greetingAddress","App","_s","title","setTitle","count","setCount","data","setData","dataCustom","setDataCustom","dataStruct","setDataStruct","arr","setArr","mapArr","setMapArr","store","setStore","counter","setCounter","counterMap","setCounterMap","array","mapArray","requestAccount","window","ethereum","request","method","fetchData","provider","providers","Web3Provider","contract","Contract","abi","struct","getData","structUpdate","getDataCustom","getMapping","getCounter","toNumber","getCounterMap","test","i","getStructArray","error","console","log","updateData","signer","getSigner","transaction","wait","pushDataArray","setStructArray","pushDataMapping","setMapping","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","rec","onChange","e","target","value","type","name","id","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Imran Khan/Desktop/Blockchain/Playing-with-Blockchain/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { ethers } from 'ethers';\nimport './App.css';\n\n// ABI\nimport GreetingABI from \"./artififacts/contracts/Greeting.sol/Greeting.json\";\n\n// Deployed Greeting Address\nconst greetingAddress = '0x5FbDB2315678afecb367f032d93F642f64180aa3';\n\nfunction App() {\n\n  const [title, setTitle] = useState(\"\");\n  const [count, setCount] = useState(\"\");\n\n  // array to store struct 'Data'\n  const [data, setData] = useState([]);\n  const [dataCustom, setDataCustom] = useState([]);\n\n  // array to store list of struct 'structData'\n  const [dataStruct, setDataStruct] = useState([]);\n\n  // Testting Array State\n  let [arr, setArr] = useState([]);\n  let [mapArr, setMapArr] = useState([]);\n\n  // array to store mapping struct 'store'\n  const [store, setStore] = useState([]);\n\n  const [counter, setCounter] = useState(\"\");\n  const [counterMap, setCounterMap] = useState(\"\");\n\n  let array = [];\n  let mapArray = [];\n\n  // Helper Functions\n  const requestAccount = async () => {\n    await window.ethereum.request({ method: 'eth_requestAccounts' });\n  }\n\n  // Getting name and age from Greeting\n  const fetchData = async () => {\n    if (window.ethereum) {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const contract = new ethers.Contract(greetingAddress, GreetingABI.abi, provider);\n      try {\n\n        // getting struct data and storing in an array state\n        const struct = await contract.getData();\n        const structUpdate = await contract.getDataCustom();\n\n        // getting struct data custom values 'structDataCustom'\n        setData(struct);\n        setDataCustom(structUpdate);\n        // console.log(data[0].toNumber());\n\n        // getting list of struct data and storing in an array state\n        // const structData = await contract.getStructArray(0);\n        // setDataStruct(structData);\n\n        // getting mapping struct data and storing in an array state 'store'\n        const store = await contract.getMapping(0);\n        setStore(store);\n        // console.log((store[0]).toNumber());\n\n        // getting the counter value\n        const counter = await contract.getCounter();\n        setCounter(counter.toNumber());\n        // console.log(counter.toNumber());\n\n        // getting the counter for Mapping value\n        const counterMap = await contract.getCounterMap();\n        setCounterMap(counterMap.toNumber());\n\n        let test;\n        for (let i=0; i<counter.toNumber()+1; i++) {\n\n          if (i!=0) {\n            test = await contract.getStructArray(i);\n            array[i] = test;\n          }\n\n          else {\n            test = await contract.getStructArray(0);\n            array[i] = test;\n          }\n        }\n\n        // console.log(counterMap.toNumber());\n        for (let i=0; i<counterMap.toNumber()+1; i++) {\n\n          if (i!=0) {\n            test = await contract.getMapping(i);\n            mapArray[i] = test;\n          }\n\n          else {\n            test = await contract.getMapping(0);\n            mapArray[i] = test;\n          }\n        }\n\n        // assigning 2d array to array state 'arr'\n        setArr(array);\n\n        // assigning mapping to array state 'mapArr'\n        setMapArr(mapArray);\n\n        //   row.map((data, j) => {\n        //     // console.log(data);\n        //   })     \n\n\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n\n\n  // Updating Custom Data of Struct 'Data'\n  const updateData = async () => {\n    if (window.ethereum) {\n      try {\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n  \n        const contract = new ethers.Contract(greetingAddress, GreetingABI.abi, signer);\n        const transaction = await contract.setData(title, count, true);\n  \n        await transaction.wait();\n        fetchData();\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  };\n\n  // Adding new value to list of structure 'setStructArray'\n  const pushDataArray = async () => {\n    if (window.ethereum) {\n      try {\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n  \n        const contract = new ethers.Contract(greetingAddress, GreetingABI.abi, signer);\n        const transaction = await contract.setStructArray(title, count, true);\n  \n        await transaction.wait();\n        fetchData();\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  };\n\n  // Adding new value to mapping of structure 'setMapping'\n  const pushDataMapping = async () => {\n    if (window.ethereum) {\n      try {\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n  \n        const contract = new ethers.Contract(greetingAddress, GreetingABI.abi, signer);\n        const transaction = await contract.setMapping(title, count, false);\n  \n        await transaction.wait();\n        fetchData();\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  };\n  \n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n\n    <p> Structure 'Data' Values<br />\n      ( <span className='columns'>ID, Title, Count, Flag</span> )<br />\n      {/* ( <span className='values'>\n          {data[0]?data[0].toNumber():''} &nbsp;\n          {data[0]?data[1]:''} &nbsp;\n          {data[0]?data[2].toNumber():''} &nbsp;\n          {data[0]?data[3]?'True':'False':''}\n      </span> )\n\n    <br /> */}\n\n      ( <span className='values'>\n          {dataCustom[0]?dataCustom[0].toNumber():''} &nbsp;\n          {dataCustom[0]?dataCustom[1]:''} &nbsp;\n          {dataCustom[0]?dataCustom[2].toNumber():''} &nbsp;\n          {dataCustom[0]?dataCustom[3]?'True':'False':''}\n      </span> )\n    </p>\n\n<p> List of sturcture 'getStructArray' Values<br />\n  ( <span className='columns'>ID, Title, Count, Flag</span> )<br />\n  {/* this is for fist record to display */}\n  {/* ( <span className='values'>\n      {dataStruct[0]?(dataStruct[0]).toNumber():''} &nbsp;\n      {dataStruct[0]?dataStruct[1]:''} &nbsp;\n      {dataStruct[0]?dataStruct[2].toNumber():''} &nbsp;\n      {dataStruct[0]?dataStruct[3]?'True':'False':''}\n  </span> )\n\n    <br /> */}\n\n\n{/* Looping through all the record store in the list of struct (struct array) */}\n{  \n    arr.map((rec, i) => {\n      return (    \n      <>\n        <span>(</span> <span className='values'>\n        {rec[0].toNumber()} &nbsp;\n        {rec[1]} &nbsp;\n        {rec[2].toNumber()} &nbsp;\n        {rec[3]==true?'True':'False'}\n        </span> <span>)</span>  <br />\n      </>\n        );\n    })\n}\n</p>\n{/* 0, { counter }, 0 */}\n<p> List of mapping 'getMapping' Values<br />\n  ( <span className='columns'>ID, Title, Count, Flag</span> )<br />\n\n  {/* ( <span className='values'>\n      {store[0]?(store[0]).toNumber():''} &nbsp;\n      {store[0]?store[1]:''} &nbsp;\n      {store[0]?store[2].toNumber():''} &nbsp;\n      {store[0]?store[3]?'True':'False':''}\n  </span> ) */}\n\n{/* Looping through all the record store in the list of struct (struct array) */}\n{  \n    mapArr.map((rec, i) => {\n      return (    \n      <>\n        <span>(</span> <span className='values'>\n        {rec[0].toNumber()} &nbsp;\n        {rec[1]} &nbsp;\n        {rec[2].toNumber()} &nbsp;\n        {rec[3]==true?'True':'False'}\n        </span> <span>)</span>  <br />\n      </>\n        );\n    })\n}\n\n</p>\n\n    <p>Array Counter: <span className='values'>{counter}</span> | Mapping Counter: <span className='values'>{counterMap}</span></p>\n\n    <br /><br />\n\n    <div className='struct'>\n\n      {/* Struct Latest Values: &nbsp; */}\n      <input\n        onChange={(e) => setTitle(e.target.value)}\n        value={title} type='text' name='title' id='title' placeholder='Title' /> &nbsp;\n\n      <input\n        onChange={(e) => setCount(e.target.value)}\n        value={count} type='text' name='count' id='count' placeholder='Count' /> &nbsp;\n\n      <button className='button' onClick={updateData}>Update Data</button>\n      <button className='button' onClick={pushDataArray}>Add to List</button>\n      <button className='button' onClick={pushDataMapping}>Add to Mapping</button>\n    </div>\n        \n        {/* <br />\n        <div className='allButtons'>\n          <button className='button' onClick={fetchData}>Fetch Struct Data</button>\n        </div>\n         */}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}