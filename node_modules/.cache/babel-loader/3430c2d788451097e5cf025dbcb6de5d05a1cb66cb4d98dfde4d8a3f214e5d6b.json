{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Imran Khan\\\\Desktop\\\\Blockchain\\\\Playing-with-Blockchain\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { ethers } from 'ethers';\nimport './App.css';\n\n// ABI\nimport GreetingABI from \"./artififacts/contracts/NFT.sol/NFT.json\";\n\n// Deployed Greeting Address\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst greetingAddress = '0x5FbDB2315678afecb367f032d93F642f64180aa3';\nfunction App() {\n  _s();\n  const [count, setCount] = useState(\"\");\n\n  // Testting Array State\n  let [arr, setArr] = useState([]);\n  let [mapArr, setMapArr] = useState([]);\n\n  // array to store mapping struct 'store'\n  const [store, setStore] = useState([]);\n  const [counterMap, setCounterMap] = useState(\"\");\n  let mapArray = [];\n\n  // Getting name and age from Greeting\n  const fetchData = async () => {\n    if (window.ethereum) {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const contract = new ethers.Contract(greetingAddress, GreetingABI.abi, provider);\n      try {\n        const counterMap = await contract.maxSupply();\n        setCounterMap(counterMap.toNumber());\n        let test;\n        for (let i = 0; i < counterMap.toNumber() + 1; i++) {\n          test = await contract.getDomain(i);\n          mapArray[i] = test;\n        }\n        setMapArr(mapArray);\n        console.log(mapArray);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  // Updating Custom Data of Struct 'Data'\n  // const updateData = async () => {\n  //   if (window.ethereum) {\n  //     try {\n  //       const provider = new ethers.providers.Web3Provider(window.ethereum);\n  //       const signer = provider.getSigner();\n\n  //       const contract = new ethers.Contract(greetingAddress, GreetingABI.abi, signer);\n  //       const transaction = await contract.setData(title, count, true);\n\n  //       await transaction.wait();\n  //       fetchData();\n  //     } catch (error) {\n  //       console.error(error);\n  //     }\n  //   }\n  // };\n\n  // // Adding new value to list of structure 'setStructArray'\n  // const pushDataArray = async () => {\n  //   if (window.ethereum) {\n  //     try {\n  //       const provider = new ethers.providers.Web3Provider(window.ethereum);\n  //       const signer = provider.getSigner();\n\n  //       const contract = new ethers.Contract(greetingAddress, GreetingABI.abi, signer);\n  //       const transaction = await contract.setStructArray(title, count, true);\n\n  //       await transaction.wait();\n  //       fetchData();\n  //     } catch (error) {\n  //       console.error(error);\n  //     }\n  //   }\n  // };\n\n  // // Adding new value to mapping of structure 'setMapping'\n  // const pushDataMapping = async () => {\n  //   if (window.ethereum) {\n  //     try {\n  //       const provider = new ethers.providers.Web3Provider(window.ethereum);\n  //       const signer = provider.getSigner();\n\n  //       const contract = new ethers.Contract(greetingAddress, GreetingABI.abi, signer);\n  //       const transaction = await contract.setMapping(title, count, true);\n\n  //       await transaction.wait();\n  //       fetchData();\n  //     } catch (error) {\n  //       console.error(error);\n  //     }\n  //   }\n  // };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" List of mapping 'getDomain' Values\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 39\n        }, this), \"( \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"columns\",\n          children: \"ID, Domain, Cost, isOwned\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 5\n        }, this), \" )\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 65\n        }, this), mapArr.map((rec, i) => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"(\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 9\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"values\",\n              children: [i + 1, \" \\xA0\", rec[0], \" \\xA0\", rec[1].toNumber(), \" \\xA0\", rec[2] == true ? 'Yes' : 'No']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 24\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \")\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this), \"  \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"struct\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 5\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"P1NaoDP7/E5pwDRUAUjrPYqU+4o=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","ethers","GreetingABI","jsxDEV","_jsxDEV","Fragment","_Fragment","greetingAddress","App","_s","count","setCount","arr","setArr","mapArr","setMapArr","store","setStore","counterMap","setCounterMap","mapArray","fetchData","window","ethereum","provider","providers","Web3Provider","contract","Contract","abi","maxSupply","toNumber","test","i","getDomain","console","log","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","rec","_c","$RefreshReg$"],"sources":["C:/Users/Imran Khan/Desktop/Blockchain/Playing-with-Blockchain/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { ethers } from 'ethers';\nimport './App.css';\n\n// ABI\nimport GreetingABI from \"./artififacts/contracts/NFT.sol/NFT.json\";\n\n// Deployed Greeting Address\nconst greetingAddress = '0x5FbDB2315678afecb367f032d93F642f64180aa3';\n\nfunction App() {\n  const [count, setCount] = useState(\"\");\n\n  // Testting Array State\n  let [arr, setArr] = useState([]);\n  let [mapArr, setMapArr] = useState([]);\n\n  // array to store mapping struct 'store'\n  const [store, setStore] = useState([]);\n\n  const [counterMap, setCounterMap] = useState(\"\");\n\n  let mapArray = [];\n\n  // Getting name and age from Greeting\n  const fetchData = async () => {\n    if (window.ethereum) {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const contract = new ethers.Contract(greetingAddress, GreetingABI.abi, provider);\n      try {\n        const counterMap = await contract.maxSupply();\n        setCounterMap(counterMap.toNumber());\n\n        let test;\n        for (let i=0; i<counterMap.toNumber()+1; i++) {\n            test = await contract.getDomain(i);\n            mapArray[i] = test;\n        }\n\n        setMapArr(mapArray);\n\n        console.log(mapArray)\n\n\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n\n\n  // Updating Custom Data of Struct 'Data'\n  // const updateData = async () => {\n  //   if (window.ethereum) {\n  //     try {\n  //       const provider = new ethers.providers.Web3Provider(window.ethereum);\n  //       const signer = provider.getSigner();\n  \n  //       const contract = new ethers.Contract(greetingAddress, GreetingABI.abi, signer);\n  //       const transaction = await contract.setData(title, count, true);\n  \n  //       await transaction.wait();\n  //       fetchData();\n  //     } catch (error) {\n  //       console.error(error);\n  //     }\n  //   }\n  // };\n\n  // // Adding new value to list of structure 'setStructArray'\n  // const pushDataArray = async () => {\n  //   if (window.ethereum) {\n  //     try {\n  //       const provider = new ethers.providers.Web3Provider(window.ethereum);\n  //       const signer = provider.getSigner();\n  \n  //       const contract = new ethers.Contract(greetingAddress, GreetingABI.abi, signer);\n  //       const transaction = await contract.setStructArray(title, count, true);\n  \n  //       await transaction.wait();\n  //       fetchData();\n  //     } catch (error) {\n  //       console.error(error);\n  //     }\n  //   }\n  // };\n\n  // // Adding new value to mapping of structure 'setMapping'\n  // const pushDataMapping = async () => {\n  //   if (window.ethereum) {\n  //     try {\n  //       const provider = new ethers.providers.Web3Provider(window.ethereum);\n  //       const signer = provider.getSigner();\n  \n  //       const contract = new ethers.Contract(greetingAddress, GreetingABI.abi, signer);\n  //       const transaction = await contract.setMapping(title, count, true);\n  \n  //       await transaction.wait();\n  //       fetchData();\n  //     } catch (error) {\n  //       console.error(error);\n  //     }\n  //   }\n  // };\n  \n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n\n<p> List of mapping 'getDomain' Values<br />\n  ( <span className='columns'>ID, Domain, Cost, isOwned</span> )<br />\n{  \n    mapArr.map((rec, i) => {\n      return (    \n      <>\n        <span>(</span> <span className='values'>\n        {i+1} &nbsp;\n        {rec[0]} &nbsp;\n        {rec[1].toNumber()} &nbsp;\n        {rec[2]==true?'Yes':'No'}\n        </span> <span>)</span>  <br />\n      </>\n        );\n    })\n}\n\n</p>\n\n    {/* <p>Array Counter: <span className='values'>{counter}</span> | Mapping Counter: <span className='values'>{counterMap}</span></p> */}\n\n    <br /><br />\n\n    <div className='struct'>\n\n      {/* Struct Latest Values: &nbsp; */}\n      {/* <input\n        onChange={(e) => setTitle(e.target.value)}\n        value={title} type='text' name='title' id='title' placeholder='Title' /> &nbsp;\n\n      <input\n        onChange={(e) => setCount(e.target.value)}\n        value={count} type='text' name='count' id='count' placeholder='Count' /> &nbsp;\n\n      <button className='button' onClick={updateData}>Update Data</button>\n      <button className='button' onClick={pushDataArray}>Add to List</button>\n      <button className='button' onClick={pushDataMapping}>Add to Mapping</button> */}\n    </div> <br /><br /><br />\n        \n        {/* <br />\n        <div className='allButtons'>\n          <button className='button' onClick={fetchData}>Fetch Struct Data</button>\n        </div>\n         */}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}